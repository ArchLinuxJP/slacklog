on:
  schedule:
  - cron: "00 12 1 * *"

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: github and support
      env:
        WORKFLOW_FILE_PATH: ${{ github.workflow }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      run: |
        echo "{\"SLACK_TOKEN\":\"${SLACK_TOKEN}\"}" > config.json

    - name: Script run
      run: |
        # start_env
        d=./json
        team=archlinuxjp
        repo=slacklog
        general=C0GFH3RHC
        random=C0GFH3RHU
        now=`date '+%Y%m01'`
        date=20191201
        #date=20201201
        limit=200
        
        if [ -f ./config.json ];then
         token=`cat ./config.json|jq -r ".SLACK_TOKEN"`
        fi

        # test_time
        file=$d/20210101_general.json
        if [ ! -f $file ];then
        	exit
        fi
        t=`cat $file |jq -r ".messages|.[].ts"`
        n=`echo "$t"|wc -l`
        for ((i=1;i<=$n;i++))
        do
        	o=`echo "$t"|awk "NR==$i"|cut -d . -f 1`
        	echo $o
        	#date -r "$o" +"%Y-%m-%d %H:%M:%S"
        	date -d "@$o" +"%Y-%m-%d %H:%M:%S"
        done
        
        # user_json
        # https://api.slack.com/methods/users.list
        url=https://slack.com/api/users.list
        if [ ! -f $d/user.json ];then
        	curl -X GET -H 'Content-type: application/json' "$url?token=$token" >! $d/user.json
        fi

        slack_history(){
        	if [ ! -f $json.json ];then
        	 curl -X GET -H 'Content-type: application/json' "$url?token=$token&channel=$general&latest=$latest&oldest=$oldest&limit=$limit" |jq . >! $json.json
        	fi
        
        	# next-page
        	# 応答には、値を含む最上位のresponse_metadata属性が含まれnext_cursorます。cursor後続のリクエストでこの値をパラメータとして使用することでlimit、仮想ページごとにコレクション ページをナビゲートできます。
        	if [ -f $json.json ];then
        		n=`cat $json.json|jq -r ".response_metadata.next_cursor"`
        	fi
        	if [ "$n" != "null" ];then
        		i=2
        		while : 
        		do
        		jsons=$json-$i
        		if [ ! -f $jsons.json ];then
        		 curl -X GET -H 'Content-type: application/json' "$url?token=$token&channel=$general&latest=$latest&oldest=$oldest&limit=$limit&cursor=$n" |jq . >! $jsons.json
        		fi
        		if [ -f $jsons.json ];then
        			n=`cat $jsons.json|jq -r ".response_metadata.next_cursor"`
        		fi
        		if [ "$n" = "null" ]; then
        			break
        		fi
        		((i++))
        	done
        	fi
        	unset n
        	unset i
        }

        # slack_log
        while :
        do
        	# https://api.slack.com/methods/conversations.history
        	url=https://slack.com/api/conversations.history
        	#oldest=`date -j -f "%Y%m%d" "$date" +%s`
        	#latest=`date -j -v+1m -f "%Y%m%d" "$date" +%s`
        	#date=`date -r $latest +"%Y%m01"`
        	#date_o=`date -r $oldest +"%Y%m01"`
        
        	oldest=`date -d "$date" +%s`
        	latest=`date -d "$date 1 months" +%s`
        	date=`date -d "@$latest" +"%Y%m01"`
        	date_o=`date -d "@$oldest" +"%Y%m01"`
        
        	json=$d/${date_o}_general
        	slack_history
        
        	json=$d/${date_o}_random
        	slack_history
        
         if [ "$now" = "$date" ]; then
          break
         fi
        done

        # name_rewrite
        t=`ls $d/20*.json`
        n=`echo "$t"|wc -l`
        for ((i=1;i<=$n;i++))
        do
        	tt=`echo "$t"|awk "NR==$i"`
        	ttt=`cat $tt |jq -r ".messages|.[].user"|sort|uniq`
        	if [ -n "$ttt" ];then
        	nn=`echo "$ttt"|wc -l`
        	for ((ii=1;ii<=$nn;ii++))
        	do
        		id=`echo "$ttt"|awk "NR==$ii"`
        		name=`cat $d/user.json|jq -r ".members|.[]|select(.id == \"$id\")|.name"`
        		if [ -z "$name" ];then
        			echo ok $tt
        			break
        		fi
        		if [ "$id" != "null" ] && [ -n "$name" ];then
        			echo $id $name
        			#echo sed -i \"\" \"s/$id/$name/g\" $tt
        			#sed -i "" "s/$id/$name/g" $tt
        			echo sed -i \"s/$id/$name/g\" $tt
        			sed -i "s/$id/$name/g" $tt
        		fi
        	done
        	fi
        done
        
        # latest_json
        f=$d/latest.json
        d=`ls $d/20*.json|tail -n 1`
        d=`echo ${d##*/}|cut -d _ -f 1`
        echo "{\"latest\":\"$d\"}" >! $f
 
    - name: Git settings
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add json/
        if git commit -m "update json" -a;then
          echo ok commit
        else
          echo error commit
          exit
        fi

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: master
